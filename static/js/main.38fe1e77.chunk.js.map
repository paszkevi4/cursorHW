{"version":3,"sources":["components/Navbar.jsx","homeworks/TBA.jsx","components/common/Card1.jsx","homeworks/hw1/functions.js","homeworks/hw1/HomeWork1.jsx","homeworks/hw2/functions.js","Store/store.js","homeworks/hw2/HomeWork2.jsx","homeworks/hw3/functions.js","homeworks/hw3/console.js","homeworks/hw3/HomeWork3.jsx","homeworks/hw4/HomeWork4.jsx","homeworks/hw6/Card.js","homeworks/hw5/functions.js","homeworks/hw6/functions.js","homeworks/hw6/HomeWork6.jsx","homeworks/hw7/functions.js","homeworks/hw7/HomeWork7.jsx","homeworks/hw8/HomeWork8.jsx","homeworks/hw9/Square/Square.jsx","homeworks/hw9/HomeWork9.jsx","homeworks/hw11/functions.js","homeworks/hw11/HomeWork11.jsx","homeworks/hw13/FontCard.jsx","homeworks/hw13/generators.js","homeworks/hw13/HomeWork13.jsx","App.js","serviceWorker.js","index.js","homeworks/hw9/Square/square.module.sass"],"names":["Navbar","props","className","to","activeClassName","TBA","BtnBlock","onClick","clickHandler","btnText","Card","title","text","hide","innerText","textToP","Text","map","el","Array","isArray","style","display","flexDirection","justifyContent","functions","totalFlooredCount","firstPrise","secondPrice","thirdPrice","Math","floor","ceiledTotal","price","neededRound","ceil","averageCount","arr","sum","i","length","toFixed","newPriceCount","totalPrice","discount","profitCount","newPrice","basicPrices","prices","theBiggestOne","max","theLowestOne","min","APPLE_PRICE","totalPriceFloor","totalPriceRounded","isEven","customerMoney","customerChange","average","random","profit","prompt","arrToShow","HomeWork1","key","strToShow","Number","isInteger","LOWER","HIGHER","SKIP_EVEN","res","store","hw1","hw2","hw6","students","name","course","subjects","math","algorithms","data_science","physics","economics","geometry","statistics","english","cosmology","hw7","ukraine","tax","middleSalary","vacancies","latvia","litva","hw9","grandSquare","fill","colors","HomeWork2","useState","lower","setNewLower","higher","setNewHigher","skipEven","setNewSkip","window","confirm","namePrettier","newName","toUpperCase","slice","toLowerCase","getRandomNumber","temp","willGet","getSum","this","setSum","value","usdExchange","setUSD","usd","requestURL","sendRequest","method","url","fetch","then","response","json","convertCurrency","a","ownedMoney","data","tempCurr","buy","console","log","uah","sale","deleteLetters","letter","word","result","split","splice","join","varsForTesting","number","power","f","currentMax","toString","getMaxDigit","degree","answer","degreeCounter","sal","incomeTax","militaryTax","incomeFee","militaryFee","salaryCount","counter","countLetter","symbolNumber","pass","push","createPassword","str","spacelesString","reversedString","reverse","isP","isPalyndrom","string","newString","needToDelete","j","deleteDuplicateLetter","loggingResults","textId","id","btnId","HomeWork3","markedStudents","markedPairs","HomeWork4","StudentsCard","bestStudent","data-badge-caption","replaceBadWords","badWords","tempString","replace","getSubjects","student","Object","keys","getAverageMark","sub","getAverage","numbers","getStudentsNames","sorted","sort","getBestStudent","newArr","JSON","parse","stringify","stud","reduce","prev","curr","calculateWordLetters","forEach","HomeWork6","state","setSorted","wordForCalcs","entries","averageMark","getMyTaxes","salary","getMiddleTaxes","getTotalTaxes","getMySalary","answ","taxes","call","HomeWork7","countries","mySalary","setInterval","myTaxesAcrosCountries","country","middleTaxesByCountries","totalTaxesInCountries","ostap","scholarship","getScholarship","expelled","university","fullName","_marks","marks","mark","studentsMarks","HomeWork8","getInfo","Square","square","backgroundColor","color","HomeWork9","showBlocks","generateBlocks","blocksInterval","generateBlocksInterval","effect","setEffect","useEffect","setTimeout","board","row","_cell","main","btnGroup","time","getRandomChinese","Date","now","uniqueKey","substr","String","fromCharCode","Promise","Error","HomeWrork11","FontCard","increase","decrease","fontSize","fontGenerator","size","next","direction","done","newFontGenerator","HomeWork13","infiniteGenerator","setState","setFontSize","generatorValue","useRef","current","idGenerator","u","App","basename","process","path","render","exact","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.38fe1e77.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './index.sass';\r\n\r\nexport const Navbar = (props) => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw1\" activeClassName=\"active\">\r\n          hw#1\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw2\" activeClassName=\"active\">\r\n          hw#2\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw3\" activeClassName=\"active\">\r\n          hw#3\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw4\" activeClassName=\"active\">\r\n          hw#4\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw6\" activeClassName=\"active\">\r\n          hw#6\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw7\" activeClassName=\"active\">\r\n          hw#7\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw8\" activeClassName=\"active\">\r\n          hw#8\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw9\" activeClassName=\"active\">\r\n          hw#9\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw11\" activeClassName=\"active\">\r\n          hw#11\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw13\" activeClassName=\"active\">\r\n          hw#13\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const TBA = () => {\r\n    return (\r\n        <div>TBA</div>\r\n    )\r\n}","import React from 'react';\r\n\r\nconst BtnBlock = (props) => {\r\n  return (\r\n    <div className=\"card-action\">\r\n      <a\r\n        className=\"waves-effect green btn\"\r\n        onClick={() => {\r\n          props.clickHandler();\r\n        }}>\r\n        {props.btnText ? props.btnText : 'Змiнити'}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Card = (props) => {\r\n  const { title, text, hide, clickHandler, btnText } = props;\r\n\r\n  const textToP = (Text) => {\r\n    return Text.map((el) => {\r\n      if (Array.isArray(el)) {\r\n        return <p>{textToP(el)}</p>;\r\n      } else {\r\n        return <span>{el + ' '}</span>;\r\n      }\r\n    });\r\n  };\r\n\r\n  const innerText = textToP(text);\r\n  return (\r\n    <div className=\"col s12 m6 l4\">\r\n      <div\r\n        className=\"card\"\r\n        style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\r\n        <div className=\"card-content\">\r\n          <p className=\"card-title\">{title}</p>\r\n          {innerText}\r\n        </div>\r\n        {hide ? ' ' : <BtnBlock clickHandler={clickHandler} btnText={btnText} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const functions = {\r\n  totalFlooredCount(firstPrise, secondPrice, thirdPrice) {\r\n    return Math.floor(firstPrise) + Math.floor(secondPrice) + Math.floor(thirdPrice);\r\n  },\r\n  ceiledTotal(price, neededRound) {\r\n    return Math.ceil(price / neededRound) * neededRound;\r\n  },\r\n  averageCount(arr) {\r\n    let sum = 0;\r\n    for (let i = 0; i < arr.length; i++) {\r\n      sum += arr[i];\r\n    }\r\n    return +(sum / arr.length).toFixed(2);\r\n  },\r\n  newPriceCount(totalPrice, discount) {\r\n    return +(totalPrice * (1 - discount)).toFixed(2);\r\n  },\r\n  profitCount(newPrice, totalPrice) {\r\n    return newPrice - totalPrice / 2;\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { Card } from '../../components/common/Card1';\r\nimport { functions } from './functions.js';\r\n\r\nconst APPLE_PRICE = 15.678;\r\nconst FUEL_PRICE = 123.965;\r\nconst ICECREAM_PRICE = 90.2345;\r\n\r\nlet basicPrices = [APPLE_PRICE, FUEL_PRICE, ICECREAM_PRICE];\r\n\r\nlet prices = {\r\n  theBiggestOne: Math.max(...basicPrices),\r\n  theLowestOne: Math.min(...basicPrices),\r\n  totalPrice: APPLE_PRICE + FUEL_PRICE + ICECREAM_PRICE,\r\n  totalPriceFloor: functions.totalFlooredCount(...basicPrices),\r\n  totalPriceRounded: null,\r\n  isEven: false,\r\n  customerMoney: 500,\r\n  customerChange: null,\r\n  average: null,\r\n  discount: Math.random(),\r\n  newPrice: null,\r\n  profit: null,\r\n};\r\n\r\nprices.totalPriceRounded = functions.ceiledTotal(prices.totalPriceFloor, 100);\r\nprices.isEven = prices.totalPriceFloor % 2 === 0;\r\nprices.customerChange =\r\n  (prices.customerMoney || prompt('How much does customer have?')) - prices.totalPrice;\r\nprices.average = functions.averageCount(basicPrices);\r\nprices.newPrice = functions.newPriceCount(prices.totalPrice, prices.discount);\r\nprices.profit = functions.profitCount(prices.newPrice, prices.totalPrice);\r\n\r\nconst arrToShow = [\r\n  ['Максимальна ціна: ', prices.theBiggestOne],\r\n  ['Мінімальна ціна: ', prices.theLowestOne],\r\n  ['Вартість всіх товарів: ', prices.totalPrice],\r\n  ['Округлена ціла частина: ', prices.totalPriceFloor],\r\n  ['Сума товарів округлена до сотень:', prices.totalPriceRounded],\r\n  ['Чи є сума всіх товарів парним числом:', prices.isEven ? 'так' : 'ні'],\r\n  ['Решта:', prices.customerChange],\r\n  ['Середнє значення цін:', prices.average],\r\n  ['Нова ціна:', prices.newPrice],\r\n  ['Чистий прибуток:', prices.profit],\r\n];\r\n\r\nexport const HomeWork1 = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <Card key=\"id1\" title=\"HW #1\" text={arrToShow} hide={true} />\r\n    </div>\r\n  );\r\n};\r\n","export const functions = {\r\n  numberSetter(strToShow) {\r\n    let i = null;\r\n    while (!i) {\r\n      i = +prompt(strToShow);\r\n      let r = Number.isInteger(i / 1) ? '' : (i = null);\r\n    }\r\n    return i;\r\n  },\r\n  counter(LOWER = 2, HIGHER = 5, SKIP_EVEN = false) {\r\n    let res = 0;\r\n    for (let i = LOWER; i <= HIGHER; i++) {\r\n      if (SKIP_EVEN && i % 2 == 0) continue;\r\n      res += i;\r\n    }\r\n    return res;\r\n  },\r\n};\r\n","let store = {\r\n  hw1: {},\r\n  hw2: {\r\n    LOWER: 2,\r\n    HIGHER: 6,\r\n    SKIP_EVEN: false,\r\n  },\r\n  hw6: {\r\n    students: [\r\n      {\r\n        name: 'Tanya',\r\n        course: 3,\r\n        subjects: {\r\n          math: [4, 4, 3, 4],\r\n          algorithms: [3, 3, 3, 4, 4, 4],\r\n          data_science: [5, 5, 3, 4],\r\n        },\r\n      },\r\n      {\r\n        name: 'Victor',\r\n        course: 4,\r\n        subjects: {\r\n          physics: [5, 5, 5, 3],\r\n          economics: [2, 3, 3, 3, 3, 5],\r\n          geometry: [5, 5, 2, 3, 5],\r\n        },\r\n      },\r\n      {\r\n        name: 'Anton',\r\n        course: 2,\r\n        subjects: {\r\n          statistics: [4, 5, 5, 5, 5, 3, 4, 3, 4, 5],\r\n          english: [5, 3],\r\n          cosmology: [5, 5, 5, 5],\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  hw7: {\r\n    ukraine: { tax: 0.195, middleSalary: 1789, vacancies: 11476 },\r\n    latvia: { tax: 0.25, middleSalary: 1586, vacancies: 3921 },\r\n    litva: { tax: 0.15, middleSalary: 1509, vacancies: 1114 },\r\n  },\r\n  hw9: {\r\n    grandSquare: new Array(5).fill(null).map(() => new Array(5).fill(null)),\r\n    colors: [\r\n      'white',\r\n      'red',\r\n      'orange',\r\n      'yellow',\r\n      'lime',\r\n      'green',\r\n      'blue',\r\n      'navy',\r\n      'purple',\r\n      'fuchsia',\r\n      'black',\r\n    ],\r\n  },\r\n};\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { functions } from './functions';\r\nimport { Card } from '../../components/common/Card1';\r\nimport store from '../../Store/store';\r\nimport { useState } from 'react';\r\n\r\nexport const HomeWork2 = () => {\r\n  const [lower, setNewLower] = useState(store.hw2.LOWER);\r\n  const [higher, setNewHigher] = useState(store.hw2.HIGHER);\r\n  const [skipEven, setNewSkip] = useState(store.hw2.SKIP_EVEN);\r\n\r\n  const clickHandler = () => {\r\n    setNewLower(functions.numberSetter('Від якого числа небхідно складати?'));\r\n    setNewHigher(functions.numberSetter('Do якого числа небхідно складати?'));\r\n    setNewSkip(window.confirm('Чи потрiбно пропускати парнi?'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <Card\r\n        title=\"HW #2\"\r\n        clickHandler={clickHandler}\r\n        text={[\r\n          `Сума всiх ${skipEven ? 'непарних' : ''} чисел`,\r\n          `від ${lower} до ${higher}`,\r\n          `дорівнює ${functions.counter(lower, higher, skipEven)}`,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/* 1. Функція, яка отримує будь-яке число та виводить найбільшу цифру в цьому числі. */\r\nexport const getMaxDigit = ( number = prompt('Введiть значення, у якому треба знайти найбiльшу цифру') ) => {\r\n    number = number.toString();\r\n    let currentMax = number[0];\r\n    for (let i = 1; i < number.length; i++) {\r\n        if (number[i] > currentMax) currentMax = number[i]\r\n    };\r\n    return currentMax;\r\n}\r\n\r\n/* 2. Створити функцію, яка визначає ступінь числа. */\r\nexport const degreeCounter = ( number = prompt('Значення, яке треба множити'), degree = prompt('Степiнь') ) => {\r\n    if ( degree === 0 ) return 1\r\n    let answer = number;\r\n    for ( let i = 1; i < degree; i++ ) {\r\n        answer *= number;\r\n    }\r\n    return answer\r\n}\r\n\r\n/* 3. Функція, яка форматує ім'я, роблячи першу букву великою. */\r\nexport const namePrettier = ( name = prompt('Введiть ваше iм\\'я') ) => {\r\n    let newName = name[0].toUpperCase() + name.slice(1).toLowerCase();\r\n    return newName;\r\n}\r\n\r\n/* 4. Функція, яка вираховує суму, що залишається після оплати податку від зарабітньої плати. */\r\nexport const salaryCount = ( sal = prompt('Розрахункова ЗП') ) => {\r\n    const incomeTax = 18;\r\n    const militaryTax = 1.5;\r\n    const incomeFee = sal * ( incomeTax / 100 );\r\n    const militaryFee = sal * ( militaryTax / 100 );\r\n    return sal - (incomeFee + militaryFee);\r\n}\r\n\r\n/* 5. Створити функцію, яка повертає випадкове ціле число в діапазоні від N до M. */\r\nexport const getRandomNumber = ( lower = +prompt('Шукаємо у промiжку з:'), higher = +prompt('та до якого значення:') ) => {\r\n    const temp = Math.random() * (higher - lower) + lower;\r\n    return Math.ceil(temp);\r\n}\r\n\r\n/* 6. Функція, яка рахує скільки разів певна буква повторюється в слові. */\r\nexport const countLetter = ( letter = prompt('Шукати букву:'), word = prompt('У якому рядку?') ) => {\r\n    let counter = 0;\r\n    for ( let i = 0; i < word.length; i++ ) {\r\n        if ( word[i].toLowerCase() === letter.toLowerCase()) counter++\r\n    };\r\n    return counter;\r\n}\r\n\r\n/*7. Функція, яка конвертує долари в гривні та навпаки*/\r\nconst willGet = (function () {\r\n    let sum = null;\r\n    return {\r\n        getSum: function() {\r\n            return this.sum\r\n        },\r\n        setSum: function(value) {\r\n            this.sum = value\r\n        },\r\n    }\r\n})()\r\n\r\nconst usdExchange = (function () {\r\n    let usd = null;\r\n    return {\r\n        setUSD: function(value) {\r\n            this.usd = value\r\n        },\r\n    }\r\n})()\r\n\r\nconst requestURL = 'https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5'\r\n\r\nlet sendRequest = (method, url) => {\r\n    return fetch(url).then( response => {\r\n        return response.json()\r\n    })\r\n}\r\n\r\nexport const convertCurrency = async ( ownedMoney = prompt('How much do you have? I need $xxx or xxxUAH format')  ) => {\r\n    await sendRequest('GET', requestURL)\r\n        .then(function (data) {\r\n            usdExchange.setUSD(data[0])\r\n        });\r\n    let tempCurr = null\r\n    if (ownedMoney[0] === '$') {\r\n        let usd = ownedMoney.slice(1)\r\n        tempCurr = (usd * usdExchange.usd.buy).toFixed(2)\r\n        willGet.setSum(tempCurr + ' hryvnas')\r\n        console.log(`7. For ${ownedMoney} dollars you can get ${tempCurr} hryvnas`)\r\n    } else if (ownedMoney.slice(-3) === 'UAH') {\r\n        let uah = ownedMoney.slice(0, -3)\r\n        tempCurr = (uah / usdExchange.usd.sale).toFixed(2)\r\n        willGet.setSum('$' + tempCurr)\r\n        console.log(`7. For ${ownedMoney} hryvnas you can get ${tempCurr} dollars`)\r\n    } else {\r\n        console.log(`Unknown currency`)\r\n    }\r\n}\r\n\r\n/* 8. Функція генерації випадкового паролю Довжина встановлюється користувачем або по замовчуванню = 8 символам. */\r\nexport const createPassword = ( symbolNumber = 8 ) => {\r\n    if ( !symbolNumber ) symbolNumber = 8\r\n    let pass = []\r\n    for ( let i = 0; i < symbolNumber; i++) {\r\n        pass.push(Math.ceil( (Math.random() * 9) ))\r\n    }\r\n    return pass.join('')\r\n}\r\n\r\n/* 9. Функція, яка видаляє небхiднi букви з речення. */\r\nexport const deleteLetters = ( letter = prompt('Яку букву небхiдно видалити:'), word = prompt('У якому рядку?') ) => {\r\n    let result = word.toLowerCase().split('');\r\n    for ( let i = 0; i < result.length; i++ ) {\r\n        if (result[i] === letter.toLowerCase()) result.splice(i, 1)\r\n    };\r\n    result = result.join('')\r\n    return result;\r\n}\r\n\r\n/* 10. Функція, яка перевіряє, чи є слово паліндромом. */\r\nexport const isPalyndrom = ( str = prompt('Яку фразу треба перевiрити?') ) => {\r\n    let spacelesString = deleteLetters (' ', str)\r\n    let reversedString = spacelesString.split('').reverse().join('')\r\n    const isP = spacelesString === reversedString\r\n    return isP\r\n}\r\n\r\n/*11. Функція, яка видаляє з речення букви, які зустрічаються більше 1 разу.*/\r\nexport const deleteDuplicateLetter = (string = prompt('У якому рядку необхiдно видалити повторення?')) => {\r\n    let newString = string\r\n    let needToDelete = []\r\n    for ( let i = 0; i < string.length; i++ ) {\r\n        for ( let j = 0; j < string.length; j++) {\r\n            if (string[i] === string[j] && i !== j) {\r\n                needToDelete.push(string[i])\r\n            }\r\n        }\r\n    }\r\n    for ( let i = 0; i < string.length; i++ ) {\r\n        for ( let j = 0; j < needToDelete.length; j++ ) {\r\n            if ( needToDelete[j] === newString[i]) {\r\n                newString = deleteLetters( needToDelete[j], newString )\r\n            }\r\n        }\r\n    }\r\n    return newString\r\n}","import {getMaxDigit, degreeCounter, namePrettier, salaryCount,\r\n    getRandomNumber, countLetter, convertCurrency, createPassword,\r\n    deleteLetters, isPalyndrom, deleteDuplicateLetter} from './functions'\r\n\r\nconst varsForTesting = {\r\n    maxDigit: 567321,\r\n    pow: {\r\n        number: 2,\r\n        power: 5,\r\n    },\r\n    name: 'вЛАД',\r\n    salary: 10000,\r\n    random: {\r\n        min: 2,\r\n        max: 5,\r\n    },\r\n    counter: {\r\n        letter: 'а',\r\n        word: 'Асталавiста',\r\n    },\r\n    currency: '$137',\r\n    deleteing: {\r\n        letter: 'a',\r\n        word: 'ababagalamaga',\r\n    },\r\n    palyndrom: 'Аргентина манит негра',\r\n    duplicates: 'aabcadefb'\r\n}\r\n\r\nconst f = [\r\n    `Max digit out of ${varsForTesting.maxDigit} is ${getMaxDigit(varsForTesting.maxDigit)}`,\r\n    `${varsForTesting.pow.number} в ступенi ${varsForTesting.pow.power} дорiнює ${degreeCounter(varsForTesting.pow.number, varsForTesting.pow.power)}`,\r\n    `Propper way to write ${varsForTesting.name} is ${namePrettier(varsForTesting.name)}`,\r\n    `Маючи зп ${varsForTesting.salary} ти отримаєш тiльки ${salaryCount(varsForTesting.salary)}`,\r\n    `Довiльне значення вiд ${varsForTesting.random.min} до ${varsForTesting.random.max} може бути, наприклад ${getRandomNumber(varsForTesting.random.min, varsForTesting.random.max)}`,\r\n    `Буква ${varsForTesting.counter.letter} зустрiчається у рядку ${varsForTesting.counter.word} ${countLetter(varsForTesting.counter.letter, varsForTesting.counter.word)} рази`,\r\n    `async func. will be shown at the bottom`,\r\n    `Your new password is ${createPassword()}`,\r\n    `${varsForTesting.deleteing.word} without all the ${varsForTesting.deleteing.letter}'s is just a ${deleteLetters(varsForTesting.deleteing.letter, varsForTesting.deleteing.word)}`,\r\n    `${varsForTesting.palyndrom} - це${ isPalyndrom(varsForTesting.palyndrom) ? '' : ' не'} палiндром`,\r\n    `${varsForTesting.duplicates} without duplicates is ${deleteDuplicateLetter(varsForTesting.duplicates)}`,\r\n]\r\n\r\nconst loggingResults = () => {\r\n    for ( let i = 0; i < f.length ; i++ ) {\r\n        console.log(`${i+1}. ${f[i]}`)\r\n    }\r\n    convertCurrency(varsForTesting.currency)\r\n}\r\n\r\nexport default loggingResults","import React from 'react';\r\nimport loggingResults from './console';\r\nimport {\r\n  getMaxDigit,\r\n  degreeCounter,\r\n  namePrettier,\r\n  salaryCount,\r\n  getRandomNumber,\r\n  countLetter,\r\n  convertCurrency,\r\n  createPassword,\r\n  deleteLetters,\r\n  isPalyndrom,\r\n  deleteDuplicateLetter,\r\n} from './functions';\r\n\r\nloggingResults();\r\n\r\nlet Card = (props) => {\r\n  const textId = 'card' + props.id;\r\n  const btnId = 'btn' + props.id;\r\n  return (\r\n    <div className=\"col s4\">\r\n      <div className=\"card \">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{props.title}</span>\r\n          <p id={textId}>{props.text}</p>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <a id={btnId} className=\"waves-effect green btn\">\r\n            Змiнити\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const HomeWork3 = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <Card title=\"1. Виводить найбільшу цифру\" text=\"123\" id=\"1\" />\r\n        <Card title=\"1. Виводить найбільшу цифру\" text=\"123\" id=\"2\" />\r\n        <Card title=\"1. Виводить найбільшу цифру\" text=\"123\" id=\"3\" />\r\n      </div>\r\n      <div className=\"row\">\r\n        <Card title=\"4. ЗП після податків\" text=\"123\" id=\"4\" />\r\n        <Card title=\"5. Число в діапазоні\" text=\"123\" id=\"5\" />\r\n        <Card title=\"6. Повторення букви\" text=\"123\" id=\"6\" />\r\n      </div>\r\n      <div className=\"row\">\r\n        <Card title=\"7. Конвертор\" text=\"123\" id=\"7\" />\r\n        <Card title=\"8. Випадковий пароль\" text=\"123\" id=\"8\" />\r\n        <Card title=\"9. Видалення небхiдних букв\" text=\"123\" id=\"9\" />\r\n      </div>\r\n      <div className=\"row\">\r\n        <Card title=\"10. Паліндром чекер\" text=\"123\" id=\"10\" />\r\n        <Card title=\"11. Видалення дублiкацiй\" text=\"123\" id=\"11\" />\r\n      </div>\r\n    </div>\r\n\r\n    /*        <div class=\"row\">\r\n            {Card('4. ЗП після податків', f[3], \"4\")}\r\n            {Card('5. Число в діапазоні', f[4], \"5\")}\r\n            {Card('6. Повторення букви', f[5], \"6\")}\r\n        </div>\r\n        <div class=\"row\">\r\n            {/!*${Card('7. Конвертор', `For ${varsForTesting.currency} dollars you can get ${willGet.getSum()}`, \"7\")}*!/}\r\n            {Card('8. Випадковий пароль', f[7], \"8\")}\r\n            {Card('9. Видалення небхiдних букв', f[8], \"9\")}\r\n        </div>\r\n        <div className=\"row\">\r\n            {Card('10. Паліндром чекер', f[9], \"10\")}\r\n            {Card\r\n        </div>*/\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Card } from '../../components/common/Card1';\r\n\r\nconst students = ['Олександр', 'Ігор', 'Олена', 'Іра', 'Олексій', 'Світлана'];\r\nconst themes = ['Диференційне рівняння', 'Теорія автоматів', 'Алгоритми і структури даних'];\r\nconst marks = [4, 5, 5, 3, 4, 5];\r\n\r\nconst themedPairs = [];\r\nconst markedStudents = [];\r\nlet markedPairs = [];\r\n\r\nconst getPairs = () => {\r\n  const pairs = [];\r\n  let j = 0;\r\n  for (let i = 0; i < students.length; i++) {\r\n    if (students[i] == 'Олександр' || students[i] == 'Ігор' || students[i] == 'Олексій') {\r\n      pairs.push([students[i]]);\r\n    } else {\r\n      pairs[j].push(students[i]);\r\n      j++;\r\n    }\r\n  }\r\n  return pairs;\r\n};\r\n\r\nconst combiner = (pairs, themes) => {\r\n  for (let i = 0; i < pairs.length; i++) {\r\n    const pairString = pairs[i].join(' та ');\r\n    themedPairs.push([pairString, themes[i]]);\r\n  }\r\n  return themedPairs;\r\n};\r\n\r\nconst markStudents = (marked) => {\r\n  students.map((el) => {\r\n    marked.push([el, marks[students.indexOf(el)]]);\r\n  });\r\n  return marked;\r\n};\r\n\r\nconst markPairs = (pairs) => {\r\n  markedPairs = JSON.parse(JSON.stringify(pairs));\r\n  markedPairs.map((el) => {\r\n    el.push(Math.ceil(Math.random() * 5));\r\n  });\r\n  return markedPairs;\r\n};\r\n\r\n// console.log needed for homework task\r\n\r\n// console.log(\r\n//   'newMade',\r\n//   getPairs(),\r\n//   combiner(getPairs(), themes),\r\n//   markStudents(markedStudents),\r\n//   markPairs(themedPairs),\r\n// );\r\n\r\nexport const HomeWork4 = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <Card title=\"Students with marks\" text={markedStudents} hide={true} />\r\n      <Card title=\"Pairs\" text={markedPairs} hide={true} />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport './hw6.sass';\r\n\r\nexport const StudentsCard = (props) => {\r\n  const textId = 'card' + props.id;\r\n  const btnId = 'btn' + props.id;\r\n  const arrToStr = (arr) => {\r\n    return arr.join(': ');\r\n  };\r\n  const names = ['subjects', 'average', 'info'];\r\n  return (\r\n    <div className=\"col s4\">\r\n      <div className=\"card \">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{props.title}</span>\r\n          {props.text.map((el, i) => {\r\n            return (\r\n              <p id={textId}>\r\n                {Array.isArray(el) ? arrToStr(el) : el}\r\n                {props.bestStudent && el == props.bestStudent ? (\r\n                  <span className=\"new badge\" data-badge-caption=\"Best student\"></span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <a\r\n            id={btnId}\r\n            className=\"waves-effect green btn\"\r\n            onClick={() => {\r\n              props.clickHandler();\r\n            }}>\r\n            В алфавiтному порядку\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/*-----1-----*/\r\nconst getRandomArray = (length, min, max) => {\r\n  const tempArr = [];\r\n  for (let i = 0; i < length; i++) {\r\n    tempArr.push(Math.round(Math.random() * (max - min) + min));\r\n  }\r\n  return tempArr;\r\n};\r\n\r\n/*-----2-----*/\r\nconst getModa = (...numbers) => {\r\n  const tempArr = new Array(numbers.length).fill(0);\r\n  for (let i = 0; i < numbers.length; i++) {\r\n    for (let j = i + 1; j < numbers.length; j++) {\r\n      if (numbers[i] == numbers[j]) tempArr[i]++;\r\n    }\r\n  }\r\n  let max = Math.max(...tempArr);\r\n  let maxIndex = tempArr.findIndex((el) => {\r\n    if (el == max) return true;\r\n  });\r\n  return numbers[maxIndex];\r\n};\r\n\r\n/*-----3-----*/\r\nexport const getAverage = (...numbers) => {\r\n  let sum = 0;\r\n  let floatCount = 0;\r\n  numbers.map((el) => {\r\n    Number.isInteger(el) ? (sum += el) : floatCount++;\r\n  });\r\n  return sum / (numbers.length - floatCount);\r\n};\r\n\r\n/*-----4-----*/\r\nconst getMedian = (...numbers) => {\r\n  numbers.sort((a, b) => a - b);\r\n  let index = Math.floor(numbers.length / 2);\r\n  if (numbers.length % 2) {\r\n    return numbers[index];\r\n  } else {\r\n    return (numbers[index] + numbers[index - 1]) / 2;\r\n  }\r\n};\r\n\r\n/*-----5-----*/\r\nconst filterEvenNumbers = (...numbers) => {\r\n  let tempArr = numbers.filter((el) => {\r\n    return el % 2;\r\n  });\r\n  return tempArr;\r\n};\r\n\r\n/*-----6-----*/\r\nconst countPositiveNumbers = (...numbers) => {\r\n  let tempArr = numbers.filter((el) => {\r\n    return el > 0;\r\n  });\r\n  return tempArr.length;\r\n};\r\n\r\n/*-----7-----*/\r\nconst getDividedByFive = (...numbers) => {\r\n  let tempArr = numbers.filter((el) => {\r\n    return !(el % 5);\r\n  });\r\n  return tempArr;\r\n};\r\n\r\n/*-----8-----*/\r\nexport const replaceBadWords = (string) => {\r\n  const badWords = [\r\n    ['fuck', '****'],\r\n    ['shit', '****'],\r\n    ['_', ' '],\r\n  ];\r\n  let newString = string;\r\n  let tempString = '';\r\n  for (let i = 0; i < badWords.length; ) {\r\n    tempString = newString.replace(badWords[i][0], badWords[i][1]);\r\n    newString !== tempString ? (newString = tempString) : i++;\r\n  }\r\n  return newString;\r\n};\r\n\r\n/*-----9-----*/\r\nconst divideByThree = (word) => {\r\n  word = word.split(' ').join('').toLowerCase();\r\n  const tempArr = [];\r\n  for (let i = 0; i < word.length; i += 3) {\r\n    let currentPart = word.slice(i, i + 3);\r\n    tempArr.push(currentPart);\r\n  }\r\n  return tempArr;\r\n};\r\n","import { namePrettier, deleteLetters } from '../hw3/functions';\r\nimport { replaceBadWords } from '../hw5/functions';\r\n\r\n/*-----1. Повернення списку предметів-----*/\r\nexport const getSubjects = (student) => {\r\n  let subjects = [];\r\n  subjects = Object.keys(student.subjects);\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    subjects[i] = replaceBadWords(subjects[i]);\r\n    subjects[i] = namePrettier(subjects[i]);\r\n  }\r\n  return subjects.join(' ');\r\n};\r\n\r\n/*-----2. Середня оцінка-----*/\r\nexport const getAverageMark = (student) => {\r\n  const { subjects } = student;\r\n  const temp = [];\r\n  for (let sub in subjects) {\r\n    temp.push(getAverage(...subjects[sub]));\r\n  }\r\n  return getAverage(...temp).toFixed(2);\r\n};\r\n\r\nexport const getAverage = (...numbers) => {\r\n  let sum = 0;\r\n  numbers.map((el) => {\r\n    sum += el;\r\n  });\r\n  return sum / numbers.length;\r\n};\r\n\r\n/*-----3. Повернення загальної інформації про студента-----*/\r\nexport const getStudentInfo = (student) => {\r\n  const temp = {\r\n    course: student.course,\r\n    name: student.name,\r\n    averageMark: getAverageMark(student),\r\n  };\r\n  return temp;\r\n};\r\n\r\n/*-----4. Iмена студентів у алфавітному порядку-----*/\r\nexport const getStudentsNames = (students, sorted) => {\r\n  return sorted ? students.map((el) => el.name).sort() : students.map((el) => el.name);\r\n};\r\n\r\n/*-----5. Повернути iмя найкращого студента-----*/\r\nexport const getBestStudent = (students) => {\r\n  const newArr = JSON.parse(JSON.stringify(students));\r\n  newArr.map((stud) => {\r\n    stud.average = getAverageMark(stud);\r\n  });\r\n  let max = newArr.reduce((prev, curr) => {\r\n    if (prev.average > curr.average) {\r\n      return prev;\r\n    }\r\n    return curr;\r\n  });\r\n  return max.name;\r\n};\r\n\r\n/*-----6. Порахувати букви-----*/\r\nexport const calculateWordLetters = (word) => {\r\n  const temp = {};\r\n  [...word].forEach((el) => {\r\n    temp[el] ? (temp[el] += 1) : (temp[el] = 1);\r\n  });\r\n  return temp;\r\n};\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { StudentsCard } from './Card';\r\nimport { Card } from '../../components/common/Card1';\r\nimport store from '../../Store/store';\r\nimport {\r\n  getSubjects,\r\n  getAverageMark,\r\n  getStudentInfo,\r\n  getStudentsNames,\r\n  getBestStudent,\r\n  calculateWordLetters,\r\n} from './functions';\r\n\r\nexport const HomeWork6 = () => {\r\n  let state = store.hw6;\r\n  let [sorted, setSorted] = useState(false);\r\n  const clickHandler = () => {\r\n    setSorted(!sorted);\r\n  };\r\n  const wordForCalcs = 'aaabcccc';\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <StudentsCard\r\n        title=\"Students\"\r\n        text={getStudentsNames(state.students, sorted)}\r\n        clickHandler={clickHandler}\r\n        bestStudent={getBestStudent(state.students)}\r\n      />\r\n      {state.students.map((el) => {\r\n        return (\r\n          <Card\r\n            title={el.name}\r\n            text={[\r\n              `subjects:  ${getSubjects(el)}`,\r\n              ...Object.entries(getStudentInfo(el)),\r\n              `average:  ${getAverageMark(el)}`,\r\n            ]}\r\n            hide={true}\r\n          />\r\n        );\r\n      })}\r\n      <Card\r\n        title=\"Counter\"\r\n        text={[wordForCalcs, ...Object.entries(calculateWordLetters(wordForCalcs))]}\r\n        hide={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/*---1---*/\r\nexport function getMyTaxes(salary) {\r\n  return (salary * this.tax).toFixed(2);\r\n}\r\n\r\n/*---2---*/\r\nexport function getMiddleTaxes() {\r\n  return (this.middleSalary * this.tax).toFixed(2);\r\n}\r\n\r\n/*---3---*/\r\nexport function getTotalTaxes() {\r\n  return this.middleSalary * this.tax * this.vacancies;\r\n}\r\n\r\n/*---4---*/\r\nexport function getMySalary(salary) {\r\n  let answ = { salary };\r\n  answ.taxes = getMyTaxes.call(this, salary);\r\n  answ.profit = salary - answ.taxes;\r\n  return answ;\r\n}\r\n","import React from 'react';\r\n\r\nimport { Card1 } from './Card';\r\nimport { Card } from '../../components/common/Card1';\r\nimport { getRandomNumber, namePrettier } from '../hw3/functions';\r\nimport { getMyTaxes, getMiddleTaxes, getTotalTaxes, getMySalary } from './functions';\r\n\r\nimport store from '../../Store/store';\r\n\r\nexport const HomeWork7 = () => {\r\n  const state = store.hw7;\r\n  const countries = Object.keys(state);\r\n  const mySalary = getRandomNumber(1500, 2000);\r\n\r\n  setInterval(() => {\r\n    console.log('4th function is here', getMySalary.call(state[countries[0]], mySalary));\r\n  }, 10000);\r\n\r\n  const myTaxesAcrosCountries = countries.map((country) => (\r\n    <Card\r\n      id=\"myTaxes\"\r\n      title={`My taxes in ${namePrettier(country)}`}\r\n      text={[\r\n        `$ ${getMyTaxes.call(state[country], mySalary)} you would pay for taxes in ${namePrettier(\r\n          country,\r\n        )} if you had ${mySalary}-dollar salary.`,\r\n      ]}\r\n      hide\r\n    />\r\n  ));\r\n\r\n  const middleTaxesByCountries = countries.map((country) => (\r\n    <Card\r\n      id=\"averageTaxes\"\r\n      title={`Average taxes in ${namePrettier(country)}`}\r\n      text={[\r\n        `$ ${getMiddleTaxes.call(\r\n          state[country],\r\n        )} taxes are paid by IT specialist in each ${namePrettier(country)} on average.`,\r\n      ]}\r\n      hide\r\n    />\r\n  ));\r\n\r\n  const totalTaxesInCountries = countries.map((country) => (\r\n    <Card\r\n      id=\"totalTaxes\"\r\n      title={`Total taxes in ${namePrettier(country)}`}\r\n      text={[\r\n        `$ ${getTotalTaxes.call(state[country])} taxes are paid by IT specialists in ${namePrettier(\r\n          country,\r\n        )}.`,\r\n      ]}\r\n      hide\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div>{myTaxesAcrosCountries}</div>\r\n      <div>{middleTaxesByCountries}</div>\r\n      <div>{totalTaxesInCountries}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { getAverage } from '../hw6/functions';\r\nimport { Card } from '../../components/common/Card1';\r\n\r\nclass Student {\r\n  constructor(props) {\r\n    this.university = props.university;\r\n    this.course = props.course;\r\n    this.fullName = props.fullName;\r\n    this._marks = [];\r\n    this.expelled = false;\r\n  }\r\n\r\n  getInfo() {\r\n    return `Студент ${this.course} курсу, ${this.university}, ${this.fullName}`;\r\n  }\r\n  set studentsMarks(marks) {\r\n    if (!this.expelled) {\r\n      this._marks = [...this._marks, ...marks];\r\n      return this._marks;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  get marks() {\r\n    if (!this.expelled) {\r\n      return this._marks;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  set marks(mark) {\r\n    if (!this.expelled) {\r\n      this._marks = [...this._marks, mark];\r\n      console.log('new marks array', this._marks);\r\n      return this._marks;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  getAverageMark() {\r\n    return getAverage(...this._marks);\r\n  }\r\n  dismiss() {\r\n    this.expelled = true;\r\n  }\r\n  recover() {\r\n    this.expelled = false;\r\n  }\r\n}\r\n\r\nclass BudgetStudent extends Student {\r\n  constructor(props) {\r\n    super(props);\r\n    this.scholarship = 1400;\r\n    setInterval(() => {\r\n      this.getScholarship();\r\n    }, 30000);\r\n  }\r\n  getScholarship() {\r\n    if (!this.expelled && this.getAverageMark() >= 4) {\r\n      console.log(`Ви отримали ${this.scholarship} грн. стипендії`);\r\n    }\r\n  }\r\n}\r\n\r\nconst ostap = new BudgetStudent({\r\n  university: 'Вищої Школи Психотерапії м.Одеса',\r\n  course: 3,\r\n  fullName: 'Остап Бендер',\r\n});\r\nostap.studentsMarks = [5, 4, 4, 5];\r\n\r\nwindow.ostap = ostap;\r\n\r\nexport const HomeWork8 = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <Card\r\n        title={ostap.fullName}\r\n        text={[[ostap.getInfo()], ['average mark', ostap.getAverageMark()]]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport style from './square.module.sass';\r\n\r\nexport const Square = (props) => {\r\n  return <div className={style.square} style={{ backgroundColor: props.color }}></div>;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport style from './Square/square.module.sass';\r\n\r\nimport store from '../../Store/store';\r\nimport { Square } from './Square/Square';\r\n\r\nconst state = store.hw9.grandSquare;\r\nconst colors = store.hw9.colors;\r\n\r\nexport const HomeWork9 = () => {\r\n  const [showBlocks, generateBlocks] = useState(false);\r\n  const [blocksInterval, generateBlocksInterval] = useState(false);\r\n  const [effect, setEffect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (blocksInterval) {\r\n      setTimeout(() => {\r\n        setEffect(!effect);\r\n      }, 1000);\r\n    }\r\n  }, [effect, blocksInterval]);\r\n\r\n  let board = null;\r\n  const setBoard = () => {\r\n    board = state.map((row) => (\r\n      <div className={style.row}>\r\n        {row.map((_cell, i) => (\r\n          <Square key={i} color={colors[Math.floor(Math.random() * 11)]} />\r\n        ))}\r\n      </div>\r\n    ));\r\n  };\r\n  setBoard();\r\n\r\n  return (\r\n    <div className={style.main}>\r\n      <div className={style.btnGroup}>\r\n        <a className=\"waves-effect waves-light btn\" onClick={() => generateBlocks(!showBlocks)}>\r\n          Generate blocks\r\n        </a>\r\n        <a\r\n          className=\"waves-effect waves-light btn\"\r\n          onClick={() => generateBlocksInterval(!blocksInterval)}>\r\n          Set interval\r\n        </a>\r\n      </div>\r\n      <div className={style.grandSquare}>{showBlocks && board}</div>\r\n    </div>\r\n  );\r\n};\r\n","const delay = () => {\r\n  return new Promise((res) =>\r\n    setTimeout(() => {\r\n      res();\r\n    }, 50),\r\n  );\r\n};\r\n\r\nlet time = null;\r\n\r\nexport const getRandomChinese = async (length) => {\r\n  time = Date.now();\r\n  let result = [];\r\n  try {\r\n    for (let i = 0; i < length; i++) {\r\n      const uniqueKey = Date.now().toString().substr(-5);\r\n      result.push(String.fromCharCode(uniqueKey));\r\n      await delay();\r\n    }\r\n  } catch {\r\n    throw new Error('impossible error');\r\n  } finally {\r\n    console.log(`${result.join('')} за ${Date.now() - time} ms`);\r\n    // return result.join('');\r\n  }\r\n};\r\n\r\ngetRandomChinese(4);\r\n\r\n// in case you want to run it in console\r\nwindow.getRandomChinese = getRandomChinese;\r\n","import React from 'react';\r\nimport { getRandomChinese } from './functions.js';\r\n\r\nexport const HomeWrork11 = () => {\r\n  return (\r\n    <div>\r\n      <div>HW 11</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst BtnBlock = (props) => {\r\n  return (\r\n    <a\r\n      className=\" btn-floating waves-effect blue btn\"\r\n      onClick={() => {\r\n        props.clickHandler();\r\n      }}>\r\n      {props.btnText}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport const FontCard = (props) => {\r\n  const { title, text, increase, decrease } = props;\r\n\r\n  return (\r\n    <div className=\"col s12 m6 l4\">\r\n      <div\r\n        className=\"card\"\r\n        style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\r\n        <div className=\"card-content\">\r\n          <p className=\"card-title\">{title}</p>\r\n          <p style={{ fontSize: `${text}px` }}>{text}</p>\r\n        </div>\r\n        <div className=\"card-action\" style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n          <BtnBlock clickHandler={decrease} btnText=\"-\" />\r\n          <BtnBlock clickHandler={increase} btnText=\"+\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","const newFontGenerator = (size = 16) => {\r\n  return {\r\n    next(direction) {\r\n      if (direction === 'up') {\r\n        if (size >= 72) {\r\n          return { value: size, done: false };\r\n        }\r\n        return { value: (size += 2), done: false };\r\n      } else if (direction === 'down') {\r\n        if (size <= 6) {\r\n          return { value: size, done: false };\r\n        }\r\n        return { value: (size -= 2), done: false };\r\n      } else {\r\n        return { value: size, done: false };\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport const fontGenerator = newFontGenerator(14);\r\n","import React, { useState, useRef } from 'react';\r\nimport { Card } from '../../components/common/Card1';\r\nimport { FontCard } from './FontCard';\r\nimport { fontGenerator } from './generators';\r\n\r\nexport const HomeWork13 = () => {\r\n  let [state, setState] = useState([]);\r\n\r\n  let [fontSize, setFontSize] = useState(fontGenerator.next().value);\r\n  let generatorValue = useRef(0);\r\n\r\n  function* infiniteGenerator() {\r\n    while (true) {\r\n      generatorValue.current++;\r\n      yield generatorValue.current;\r\n    }\r\n  }\r\n  const idGenerator = infiniteGenerator();\r\n\r\n  const clickHandler = () => {\r\n    let u = idGenerator.next().value;\r\n    setState([...state, u]);\r\n  };\r\n\r\n  window.idGenerator = idGenerator;\r\n  window.state = state;\r\n  window.fontGenerator = fontGenerator;\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <Card\r\n        title=\"Unique ID generator\"\r\n        text={state}\r\n        clickHandler={clickHandler}\r\n        btnText=\"Додати новий id\"\r\n      />\r\n      <FontCard\r\n        title=\"Font size changer\"\r\n        text={fontSize}\r\n        increase={() => {\r\n          setFontSize(fontGenerator.next('up').value);\r\n        }}\r\n        decrease={() => {\r\n          setFontSize(fontGenerator.next('down').value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { BrowserRouter, HashRouter, Route, Redirect } from 'react-router-dom';\r\nimport { Navbar } from './components/Navbar';\r\nimport { TBA } from './homeworks/TBA';\r\nimport { HomeWork1 } from './homeworks/hw1/HomeWork1';\r\nimport { HomeWork2 } from './homeworks/hw2/HomeWork2';\r\nimport { HomeWork3 } from './homeworks/hw3/HomeWork3';\r\nimport { HomeWork4 } from './homeworks/hw4/HomeWork4';\r\nimport { HomeWork6 } from './homeworks/hw6/HomeWork6';\r\nimport { HomeWork7 } from './homeworks/hw7/HomeWork7';\r\nimport { HomeWork8 } from './homeworks/hw8/HomeWork8';\r\nimport { HomeWork9 } from './homeworks/hw9/HomeWork9';\r\nimport { HomeWrork11 } from './homeworks/hw11/HomeWork11';\r\nimport { HomeWork13 } from './homeworks/hw13/HomeWork13';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <Navbar />\r\n      <div className=\"main\">\r\n        <Route path=\"/hw1\" render={() => <HomeWork1 />} />\r\n        <Route path=\"/hw2\" render={() => <HomeWork2 />} />\r\n        <Route path=\"/hw3\" render={() => <HomeWork3 />} />\r\n        <Route path=\"/hw4\" render={() => <HomeWork4 />} />\r\n        <Route path=\"/hw5\" render={() => <HomeWork1 />} />\r\n        <Route path=\"/hw6\" render={() => <HomeWork6 />} />\r\n        <Route path=\"/hw7\" render={() => <HomeWork7 />} />\r\n        <Route path=\"/hw8\" render={() => <HomeWork8 />} />\r\n        <Route path=\"/hw9\" render={() => <HomeWork9 />} />\r\n        <Route path=\"/hw11\" render={() => <HomeWrork11 />} />\r\n        <Route path=\"/hw13\" render={() => <HomeWork13 />} />\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/me\" render={() => <TBA />} />\r\n        </Route>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'materialize-css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"square_main__2FNB9\",\"btnGroup\":\"square_btnGroup__39tfS\",\"grandSquare\":\"square_grandSquare__m6RIM\",\"row\":\"square_row__1gKuP\",\"square\":\"square_square__NFSCP\"};"],"sourceRoot":""}