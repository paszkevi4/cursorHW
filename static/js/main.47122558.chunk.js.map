{"version":3,"sources":["components/Navbar.jsx","homeworks/TBA.jsx","components/common/Card.js","homeworks/hw1/functions.js","homeworks/hw1/HomeWork1.jsx","homeworks/hw3/functions.js","homeworks/hw3/console.js","homeworks/hw3/HomeWork3.jsx","homeworks/hw4/HomeWork4.jsx","homeworks/hw6/Card.js","Store/store.js","homeworks/hw5/functions.js","homeworks/hw6/functions.js","homeworks/hw6/HomeWork6.jsx","homeworks/hw7/Card.jsx","homeworks/hw7/functions.js","homeworks/hw7/HomeWork7.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","to","activeClassName","TBA","Card","textId","id","btnId","title","text","map","el","console","log","bestStudent","Array","isArray","join","hide","onClick","clickHandler","functions","totalFlooredCount","firstPrise","secondPrice","thirdPrice","Math","floor","ceiledTotal","price","neededRound","ceil","averageCount","arr","sum","i","length","toFixed","newPriceCount","totalPrice","discount","profitCount","newPrice","basicPrices","prices","theBiggestOne","max","theLowestOne","min","APPLE_PRICE","totalPriceFloor","totalPriceRounded","isEven","customerMoney","customerChange","average","random","profit","prompt","arrToShow","HomeWork1","namePrettier","name","newName","toUpperCase","slice","toLowerCase","getRandomNumber","lower","higher","temp","willGet","getSum","this","setSum","value","usdExchange","setUSD","usd","requestURL","sendRequest","method","url","fetch","then","response","json","convertCurrency","a","ownedMoney","data","tempCurr","buy","uah","sale","deleteLetters","letter","word","result","split","splice","varsForTesting","number","power","f","currentMax","toString","getMaxDigit","degree","answer","degreeCounter","sal","incomeTax","militaryTax","incomeFee","militaryFee","salaryCount","counter","countLetter","symbolNumber","pass","push","createPassword","str","spacelesString","reversedString","reverse","isP","isPalyndrom","string","newString","needToDelete","j","deleteDuplicateLetter","loggingResults","pairs","marked","class","HomeWork3","students","marks","themedPairs","markedStudents","markedPairs","getPairs","themes","pairString","combiner","indexOf","JSON","parse","stringify","HomeWork4","data-badge-caption","store","hw1","hw6","course","subjects","math","algorithms","data_science","physics","economics","geometry","statistics","english","cosmology","hw7","ukraine","tax","middleSalary","vacancies","latvia","litva","replaceBadWords","badWords","tempString","replace","getSubjects","student","Object","keys","getAverageMark","sub","getAverage","numbers","getStudentsNames","sorted","sort","getBestStudent","newArr","stud","reduce","prev","curr","calculateWordLetters","forEach","HomeWork6","state","useState","setSorted","wordForCalcs","entries","averageMark","getMyTaxes","salary","getMiddleTaxes","getTotalTaxes","getMySalary","answ","taxes","call","HomeWork7","countries","mySalary","setInterval","myTaxesAcrosCountries","country","middleTaxesByCountries","totalTaxesInCountries","App","basename","process","path","render","exact","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.47122558.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './index.sass';\r\n\r\nexport const Navbar = (props) => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw1\" activeClassName=\"active\">\r\n          hw#1\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw2\" activeClassName=\"active\">\r\n          hw#2\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw3\" activeClassName=\"active\">\r\n          hw#3\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw4\" activeClassName=\"active\">\r\n          hw#4\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw6\" activeClassName=\"active\">\r\n          hw#6\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-li\">\r\n        <NavLink to=\"/hw7\" activeClassName=\"active\">\r\n          hw#7\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const TBA = () => {\r\n    return (\r\n        <div>TBA</div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Card = (props) => {\r\n  const textId = 'card' + props.id;\r\n  const btnId = 'btn' + props.id;\r\n  const arrToStr = (arr) => {\r\n    return arr.join(' ');\r\n  };\r\n  return (\r\n    <div className=\"col s4\">\r\n      <div className=\"card \">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{props.title}</span>\r\n          {props.text.map((el) => {\r\n            console.log(el, props.bestStudent);\r\n            return <p id={textId}>{Array.isArray(el) ? arrToStr(el) : el}</p>;\r\n          })}\r\n        </div>\r\n        {props.hide ? (\r\n          ' '\r\n        ) : (\r\n          <div className=\"card-action\">\r\n            <a\r\n              id={btnId}\r\n              className=\"waves-effect green btn\"\r\n              onClick={() => {\r\n                props.clickHandler();\r\n              }}>\r\n              Змiнити\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const functions = {\r\n  totalFlooredCount(firstPrise, secondPrice, thirdPrice) {\r\n    return Math.floor(firstPrise) + Math.floor(secondPrice) + Math.floor(thirdPrice);\r\n  },\r\n  ceiledTotal(price, neededRound) {\r\n    return Math.ceil(price / neededRound) * neededRound;\r\n  },\r\n  averageCount(arr) {\r\n    let sum = 0;\r\n    for (let i = 0; i < arr.length; i++) {\r\n      sum += arr[i];\r\n    }\r\n    return +(sum / arr.length).toFixed(2);\r\n  },\r\n  newPriceCount(totalPrice, discount) {\r\n    return +(totalPrice * (1 - discount)).toFixed(2);\r\n  },\r\n  profitCount(newPrice, totalPrice) {\r\n    return newPrice - totalPrice / 2;\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { Card } from '../../components/common/Card';\r\nimport { functions } from './functions.js';\r\n\r\nconst APPLE_PRICE = 15.678;\r\nconst FUEL_PRICE = 123.965;\r\nconst ICECREAM_PRICE = 90.2345;\r\n\r\nlet basicPrices = [APPLE_PRICE, FUEL_PRICE, ICECREAM_PRICE];\r\n\r\nlet prices = {\r\n  theBiggestOne: Math.max(...basicPrices),\r\n  theLowestOne: Math.min(...basicPrices),\r\n  totalPrice: APPLE_PRICE + FUEL_PRICE + ICECREAM_PRICE,\r\n  totalPriceFloor: functions.totalFlooredCount(...basicPrices),\r\n  totalPriceRounded: null,\r\n  isEven: false,\r\n  customerMoney: 500,\r\n  customerChange: null,\r\n  average: null,\r\n  discount: Math.random(),\r\n  newPrice: null,\r\n  profit: null,\r\n};\r\n\r\nprices.totalPriceRounded = functions.ceiledTotal(prices.totalPriceFloor, 100);\r\nprices.isEven = prices.totalPriceFloor % 2 === 0;\r\nprices.customerChange =\r\n  (prices.customerMoney || prompt('How much does customer have?')) - prices.totalPrice;\r\nprices.average = functions.averageCount(basicPrices);\r\nprices.newPrice = functions.newPriceCount(prices.totalPrice, prices.discount);\r\nprices.profit = functions.profitCount(prices.newPrice, prices.totalPrice);\r\n\r\nconst arrToShow = [\r\n  ['Максимальна ціна:', prices.theBiggestOne],\r\n  ['Мінімальна ціна:', prices.theLowestOne],\r\n  ['Вартість всіх товарів:', prices.totalPrice],\r\n  ['Округлена ціла частина:', prices.totalPriceFloor],\r\n  ['Сума товарів округлена до сотень:', prices.totalPriceRounded],\r\n  ['Чи є сума всіх товарів парним числом:', prices.isEven ? 'так' : 'ні'],\r\n  ['Решта:', prices.customerChange],\r\n  ['Середнє значення цін:', prices.average],\r\n  ['Нова ціна:', prices.newPrice],\r\n  ['Чистий прибуток:', prices.profit],\r\n];\r\n\r\nexport const HomeWork1 = () => {\r\n  return (\r\n    <div>\r\n      <Card title=\"HW#1\" text={arrToShow} hide={true} />\r\n    </div>\r\n  );\r\n};\r\n","/* 1. Функція, яка отримує будь-яке число та виводить найбільшу цифру в цьому числі. */\r\nexport const getMaxDigit = ( number = prompt('Введiть значення, у якому треба знайти найбiльшу цифру') ) => {\r\n    number = number.toString();\r\n    let currentMax = number[0];\r\n    for (let i = 1; i < number.length; i++) {\r\n        if (number[i] > currentMax) currentMax = number[i]\r\n    };\r\n    return currentMax;\r\n}\r\n\r\n/* 2. Створити функцію, яка визначає ступінь числа. */\r\nexport const degreeCounter = ( number = prompt('Значення, яке треба множити'), degree = prompt('Степiнь') ) => {\r\n    if ( degree === 0 ) return 1\r\n    let answer = number;\r\n    for ( let i = 1; i < degree; i++ ) {\r\n        answer *= number;\r\n    }\r\n    return answer\r\n}\r\n\r\n/* 3. Функція, яка форматує ім'я, роблячи першу букву великою. */\r\nexport const namePrettier = ( name = prompt('Введiть ваше iм\\'я') ) => {\r\n    let newName = name[0].toUpperCase() + name.slice(1).toLowerCase();\r\n    return newName;\r\n}\r\n\r\n/* 4. Функція, яка вираховує суму, що залишається після оплати податку від зарабітньої плати. */\r\nexport const salaryCount = ( sal = prompt('Розрахункова ЗП') ) => {\r\n    const incomeTax = 18;\r\n    const militaryTax = 1.5;\r\n    const incomeFee = sal * ( incomeTax / 100 );\r\n    const militaryFee = sal * ( militaryTax / 100 );\r\n    return sal - (incomeFee + militaryFee);\r\n}\r\n\r\n/* 5. Створити функцію, яка повертає випадкове ціле число в діапазоні від N до M. */\r\nexport const getRandomNumber = ( lower = +prompt('Шукаємо у промiжку з:'), higher = +prompt('та до якого значення:') ) => {\r\n    const temp = Math.random() * (higher - lower) + lower;\r\n    return Math.ceil(temp);\r\n}\r\n\r\n/* 6. Функція, яка рахує скільки разів певна буква повторюється в слові. */\r\nexport const countLetter = ( letter = prompt('Шукати букву:'), word = prompt('У якому рядку?') ) => {\r\n    let counter = 0;\r\n    for ( let i = 0; i < word.length; i++ ) {\r\n        if ( word[i].toLowerCase() === letter.toLowerCase()) counter++\r\n    };\r\n    return counter;\r\n}\r\n\r\n/*7. Функція, яка конвертує долари в гривні та навпаки*/\r\nconst willGet = (function () {\r\n    let sum = null;\r\n    return {\r\n        getSum: function() {\r\n            return this.sum\r\n        },\r\n        setSum: function(value) {\r\n            this.sum = value\r\n        },\r\n    }\r\n})()\r\n\r\nconst usdExchange = (function () {\r\n    let usd = null;\r\n    return {\r\n        setUSD: function(value) {\r\n            this.usd = value\r\n        },\r\n    }\r\n})()\r\n\r\nconst requestURL = 'https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5'\r\n\r\nlet sendRequest = (method, url) => {\r\n    return fetch(url).then( response => {\r\n        return response.json()\r\n    })\r\n}\r\n\r\nexport const convertCurrency = async ( ownedMoney = prompt('How much do you have? I need $xxx or xxxUAH format')  ) => {\r\n    await sendRequest('GET', requestURL)\r\n        .then(function (data) {\r\n            usdExchange.setUSD(data[0])\r\n        });\r\n    let tempCurr = null\r\n    if (ownedMoney[0] === '$') {\r\n        let usd = ownedMoney.slice(1)\r\n        tempCurr = (usd * usdExchange.usd.buy).toFixed(2)\r\n        willGet.setSum(tempCurr + ' hryvnas')\r\n        console.log(`7. For ${ownedMoney} dollars you can get ${tempCurr} hryvnas`)\r\n    } else if (ownedMoney.slice(-3) === 'UAH') {\r\n        let uah = ownedMoney.slice(0, -3)\r\n        tempCurr = (uah / usdExchange.usd.sale).toFixed(2)\r\n        willGet.setSum('$' + tempCurr)\r\n        console.log(`7. For ${ownedMoney} hryvnas you can get ${tempCurr} dollars`)\r\n    } else {\r\n        console.log(`Unknown currency`)\r\n    }\r\n}\r\n\r\n/* 8. Функція генерації випадкового паролю Довжина встановлюється користувачем або по замовчуванню = 8 символам. */\r\nexport const createPassword = ( symbolNumber = 8 ) => {\r\n    if ( !symbolNumber ) symbolNumber = 8\r\n    let pass = []\r\n    for ( let i = 0; i < symbolNumber; i++) {\r\n        pass.push(Math.ceil( (Math.random() * 9) ))\r\n    }\r\n    return pass.join('')\r\n}\r\n\r\n/* 9. Функція, яка видаляє небхiднi букви з речення. */\r\nexport const deleteLetters = ( letter = prompt('Яку букву небхiдно видалити:'), word = prompt('У якому рядку?') ) => {\r\n    let result = word.toLowerCase().split('');\r\n    for ( let i = 0; i < result.length; i++ ) {\r\n        if (result[i] === letter.toLowerCase()) result.splice(i, 1)\r\n    };\r\n    result = result.join('')\r\n    return result;\r\n}\r\n\r\n/* 10. Функція, яка перевіряє, чи є слово паліндромом. */\r\nexport const isPalyndrom = ( str = prompt('Яку фразу треба перевiрити?') ) => {\r\n    let spacelesString = deleteLetters (' ', str)\r\n    let reversedString = spacelesString.split('').reverse().join('')\r\n    const isP = spacelesString === reversedString\r\n    return isP\r\n}\r\n\r\n/*11. Функція, яка видаляє з речення букви, які зустрічаються більше 1 разу.*/\r\nexport const deleteDuplicateLetter = (string = prompt('У якому рядку необхiдно видалити повторення?')) => {\r\n    let newString = string\r\n    let needToDelete = []\r\n    for ( let i = 0; i < string.length; i++ ) {\r\n        for ( let j = 0; j < string.length; j++) {\r\n            if (string[i] === string[j] && i !== j) {\r\n                needToDelete.push(string[i])\r\n            }\r\n        }\r\n    }\r\n    for ( let i = 0; i < string.length; i++ ) {\r\n        for ( let j = 0; j < needToDelete.length; j++ ) {\r\n            if ( needToDelete[j] === newString[i]) {\r\n                newString = deleteLetters( needToDelete[j], newString )\r\n            }\r\n        }\r\n    }\r\n    return newString\r\n}","import {getMaxDigit, degreeCounter, namePrettier, salaryCount,\r\n    getRandomNumber, countLetter, convertCurrency, createPassword,\r\n    deleteLetters, isPalyndrom, deleteDuplicateLetter} from './functions'\r\n\r\nconst varsForTesting = {\r\n    maxDigit: 567321,\r\n    pow: {\r\n        number: 2,\r\n        power: 5,\r\n    },\r\n    name: 'вЛАД',\r\n    salary: 10000,\r\n    random: {\r\n        min: 2,\r\n        max: 5,\r\n    },\r\n    counter: {\r\n        letter: 'а',\r\n        word: 'Асталавiста',\r\n    },\r\n    currency: '$137',\r\n    deleteing: {\r\n        letter: 'a',\r\n        word: 'ababagalamaga',\r\n    },\r\n    palyndrom: 'Аргентина манит негра',\r\n    duplicates: 'aabcadefb'\r\n}\r\n\r\nconst f = [\r\n    `Max digit out of ${varsForTesting.maxDigit} is ${getMaxDigit(varsForTesting.maxDigit)}`,\r\n    `${varsForTesting.pow.number} в ступенi ${varsForTesting.pow.power} дорiнює ${degreeCounter(varsForTesting.pow.number, varsForTesting.pow.power)}`,\r\n    `Propper way to write ${varsForTesting.name} is ${namePrettier(varsForTesting.name)}`,\r\n    `Маючи зп ${varsForTesting.salary} ти отримаєш тiльки ${salaryCount(varsForTesting.salary)}`,\r\n    `Довiльне значення вiд ${varsForTesting.random.min} до ${varsForTesting.random.max} може бути, наприклад ${getRandomNumber(varsForTesting.random.min, varsForTesting.random.max)}`,\r\n    `Буква ${varsForTesting.counter.letter} зустрiчається у рядку ${varsForTesting.counter.word} ${countLetter(varsForTesting.counter.letter, varsForTesting.counter.word)} рази`,\r\n    `async func. will be shown at the bottom`,\r\n    `Your new password is ${createPassword()}`,\r\n    `${varsForTesting.deleteing.word} without all the ${varsForTesting.deleteing.letter}'s is just a ${deleteLetters(varsForTesting.deleteing.letter, varsForTesting.deleteing.word)}`,\r\n    `${varsForTesting.palyndrom} - це${ isPalyndrom(varsForTesting.palyndrom) ? '' : ' не'} палiндром`,\r\n    `${varsForTesting.duplicates} without duplicates is ${deleteDuplicateLetter(varsForTesting.duplicates)}`,\r\n]\r\n\r\nconst loggingResults = () => {\r\n    for ( let i = 0; i < f.length ; i++ ) {\r\n        console.log(`${i+1}. ${f[i]}`)\r\n    }\r\n    convertCurrency(varsForTesting.currency)\r\n}\r\n\r\nexport default loggingResults","import React from 'react';\r\nimport loggingResults from './console';\r\nimport {\r\n  getMaxDigit,\r\n  degreeCounter,\r\n  namePrettier,\r\n  salaryCount,\r\n  getRandomNumber,\r\n  countLetter,\r\n  convertCurrency,\r\n  createPassword,\r\n  deleteLetters,\r\n  isPalyndrom,\r\n  deleteDuplicateLetter,\r\n} from './functions';\r\n\r\nloggingResults();\r\n\r\nlet Card = (props) => {\r\n  const textId = 'card' + props.id;\r\n  const btnId = 'btn' + props.id;\r\n  return (\r\n    <div class=\"col s4\">\r\n      <div className=\"card \">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{props.title}</span>\r\n          <p id={textId}>{props.text}</p>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <a id={btnId} className=\"waves-effect green btn\">\r\n            Змiнити\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const HomeWork3 = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <Card title=\"1. Виводить найбільшу цифру\" text=\"123\" id=\"1\" />\r\n        <Card title=\"1. Виводить найбільшу цифру\" text=\"123\" id=\"2\" />\r\n        <Card title=\"1. Виводить найбільшу цифру\" text=\"123\" id=\"3\" />\r\n      </div>\r\n      <div className=\"row\">\r\n        <Card title=\"4. ЗП після податків\" text=\"123\" id=\"4\" />\r\n        <Card title=\"5. Число в діапазоні\" text=\"123\" id=\"5\" />\r\n        <Card title=\"6. Повторення букви\" text=\"123\" id=\"6\" />\r\n      </div>\r\n      <div className=\"row\">\r\n        <Card title=\"7. Конвертор\" text=\"123\" id=\"7\" />\r\n        <Card title=\"8. Випадковий пароль\" text=\"123\" id=\"8\" />\r\n        <Card title=\"9. Видалення небхiдних букв\" text=\"123\" id=\"9\" />\r\n      </div>\r\n      <div className=\"row\">\r\n        <Card title=\"10. Паліндром чекер\" text=\"123\" id=\"10\" />\r\n        <Card title=\"11. Видалення дублiкацiй\" text=\"123\" id=\"11\" />\r\n      </div>\r\n    </div>\r\n\r\n    /*        <div class=\"row\">\r\n            {Card('4. ЗП після податків', f[3], \"4\")}\r\n            {Card('5. Число в діапазоні', f[4], \"5\")}\r\n            {Card('6. Повторення букви', f[5], \"6\")}\r\n        </div>\r\n        <div class=\"row\">\r\n            {/!*${Card('7. Конвертор', `For ${varsForTesting.currency} dollars you can get ${willGet.getSum()}`, \"7\")}*!/}\r\n            {Card('8. Випадковий пароль', f[7], \"8\")}\r\n            {Card('9. Видалення небхiдних букв', f[8], \"9\")}\r\n        </div>\r\n        <div className=\"row\">\r\n            {Card('10. Паліндром чекер', f[9], \"10\")}\r\n            {Card\r\n        </div>*/\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Card } from '../../components/common/Card';\r\n\r\nconst students = ['Олександр', 'Ігор', 'Олена', 'Іра', 'Олексій', 'Світлана'];\r\nconst themes = ['Диференційне рівняння', 'Теорія автоматів', 'Алгоритми і структури даних'];\r\nconst marks = [4, 5, 5, 3, 4, 5];\r\n\r\nconst themedPairs = [];\r\nconst markedStudents = [];\r\nlet markedPairs = [];\r\n\r\nconst getPairs = () => {\r\n  const pairs = [];\r\n  let j = 0;\r\n  for (let i = 0; i < students.length; i++) {\r\n    if (students[i] == 'Олександр' || students[i] == 'Ігор' || students[i] == 'Олексій') {\r\n      pairs.push([students[i]]);\r\n    } else {\r\n      pairs[j].push(students[i]);\r\n      j++;\r\n    }\r\n  }\r\n  return pairs;\r\n};\r\n\r\nconst combiner = (pairs, themes) => {\r\n  for (let i = 0; i < pairs.length; i++) {\r\n    const pairString = pairs[i].join(' та ');\r\n    themedPairs.push([pairString, themes[i]]);\r\n  }\r\n  return themedPairs;\r\n};\r\n\r\nconst markStudents = (marked) => {\r\n  students.map((el) => {\r\n    marked.push([el, marks[students.indexOf(el)]]);\r\n  });\r\n  return marked;\r\n};\r\n\r\nconst markPairs = (pairs) => {\r\n  markedPairs = JSON.parse(JSON.stringify(pairs));\r\n  markedPairs.map((el) => {\r\n    el.push(Math.ceil(Math.random() * 5));\r\n  });\r\n  return markedPairs;\r\n};\r\n\r\nconsole.log(\r\n  'newMade',\r\n  getPairs(),\r\n  combiner(getPairs(), themes),\r\n  markStudents(markedStudents),\r\n  markPairs(themedPairs),\r\n);\r\n\r\nexport const HomeWork4 = () => {\r\n  return (\r\n    <div>\r\n      <Card title=\"Students\" text={markedStudents} hide={true} />\r\n      <Card title=\"Pairs\" text={markedPairs} hide={true} />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport './hw6.sass';\r\n\r\nexport const Card = (props) => {\r\n  const textId = 'card' + props.id;\r\n  const btnId = 'btn' + props.id;\r\n  const arrToStr = (arr) => {\r\n    return arr.join(': ');\r\n  };\r\n  const names = ['subjects', 'average', 'info'];\r\n  return (\r\n    <div className=\"col s6\">\r\n      <div className=\"card \">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{props.title}</span>\r\n          {props.text.map((el, i) => {\r\n            return (\r\n              <p id={textId}>\r\n                {Array.isArray(el) ? arrToStr(el) : el}\r\n                {props.bestStudent && el == props.bestStudent ? (\r\n                  <span class=\"new badge\" data-badge-caption=\"Best student\"></span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n        {props.hide ? (\r\n          ' '\r\n        ) : (\r\n          <div className=\"card-action\">\r\n            <a\r\n              id={btnId}\r\n              className=\"waves-effect green btn\"\r\n              onClick={() => {\r\n                props.clickHandler();\r\n              }}>\r\n              В алфавiтному порядку\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","let store = {\r\n  hw1: {},\r\n  hw6: {\r\n    students: [\r\n      {\r\n        name: 'Tanya',\r\n        course: 3,\r\n        subjects: {\r\n          math: [4, 4, 3, 4],\r\n          algorithms: [3, 3, 3, 4, 4, 4],\r\n          data_science: [5, 5, 3, 4],\r\n        },\r\n      },\r\n      {\r\n        name: 'Victor',\r\n        course: 4,\r\n        subjects: {\r\n          physics: [5, 5, 5, 3],\r\n          economics: [2, 3, 3, 3, 3, 5],\r\n          geometry: [5, 5, 2, 3, 5],\r\n        },\r\n      },\r\n      {\r\n        name: 'Anton',\r\n        course: 2,\r\n        subjects: {\r\n          statistics: [4, 5, 5, 5, 5, 3, 4, 3, 4, 5],\r\n          english: [5, 3],\r\n          cosmology: [5, 5, 5, 5],\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  hw7: {\r\n    ukraine: { tax: 0.195, middleSalary: 1789, vacancies: 11476 },\r\n    latvia: { tax: 0.25, middleSalary: 1586, vacancies: 3921 },\r\n    litva: { tax: 0.15, middleSalary: 1509, vacancies: 1114 },\r\n  },\r\n};\r\n\r\nexport default store;\r\n","/*-----1-----*/\r\nconst getRandomArray = (length, min, max) => {\r\n  const tempArr = [];\r\n  for (let i = 0; i < length; i++) {\r\n    tempArr.push(Math.round(Math.random() * (max - min) + min));\r\n  }\r\n  return tempArr;\r\n};\r\n\r\n/*-----2-----*/\r\nconst getModa = (...numbers) => {\r\n  const tempArr = new Array(numbers.length).fill(0);\r\n  for (let i = 0; i < numbers.length; i++) {\r\n    for (let j = i + 1; j < numbers.length; j++) {\r\n      if (numbers[i] == numbers[j]) tempArr[i]++;\r\n    }\r\n  }\r\n  let max = Math.max(...tempArr);\r\n  let maxIndex = tempArr.findIndex((el) => {\r\n    if (el == max) return true;\r\n  });\r\n  return numbers[maxIndex];\r\n};\r\n\r\n/*-----3-----*/\r\nexport const getAverage = (...numbers) => {\r\n  let sum = 0;\r\n  let floatCount = 0;\r\n  numbers.map((el) => {\r\n    Number.isInteger(el) ? (sum += el) : floatCount++;\r\n  });\r\n  return sum / (numbers.length - floatCount);\r\n};\r\n\r\n/*-----4-----*/\r\nconst getMedian = (...numbers) => {\r\n  numbers.sort((a, b) => a - b);\r\n  let index = Math.floor(numbers.length / 2);\r\n  if (numbers.length % 2) {\r\n    return numbers[index];\r\n  } else {\r\n    return (numbers[index] + numbers[index - 1]) / 2;\r\n  }\r\n};\r\n\r\n/*-----5-----*/\r\nconst filterEvenNumbers = (...numbers) => {\r\n  let tempArr = numbers.filter((el) => {\r\n    return el % 2;\r\n  });\r\n  return tempArr;\r\n};\r\n\r\n/*-----6-----*/\r\nconst countPositiveNumbers = (...numbers) => {\r\n  let tempArr = numbers.filter((el) => {\r\n    return el > 0;\r\n  });\r\n  return tempArr.length;\r\n};\r\n\r\n/*-----7-----*/\r\nconst getDividedByFive = (...numbers) => {\r\n  let tempArr = numbers.filter((el) => {\r\n    return !(el % 5);\r\n  });\r\n  return tempArr;\r\n};\r\n\r\n/*-----8-----*/\r\nexport const replaceBadWords = (string) => {\r\n  const badWords = [\r\n    ['fuck', '****'],\r\n    ['shit', '****'],\r\n    ['_', ' '],\r\n  ];\r\n  let newString = string;\r\n  let tempString = '';\r\n  for (let i = 0; i < badWords.length; ) {\r\n    tempString = newString.replace(badWords[i][0], badWords[i][1]);\r\n    newString !== tempString ? (newString = tempString) : i++;\r\n  }\r\n  return newString;\r\n};\r\n\r\n/*-----9-----*/\r\nconst divideByThree = (word) => {\r\n  word = word.split(' ').join('').toLowerCase();\r\n  const tempArr = [];\r\n  for (let i = 0; i < word.length; i += 3) {\r\n    let currentPart = word.slice(i, i + 3);\r\n    tempArr.push(currentPart);\r\n  }\r\n  return tempArr;\r\n};\r\n","import { namePrettier, deleteLetters } from '../hw3/functions';\r\nimport { replaceBadWords } from '../hw5/functions';\r\n\r\n/*-----1. Повернення списку предметів-----*/\r\nexport const getSubjects = (student) => {\r\n  let subjects = [];\r\n  subjects = Object.keys(student.subjects);\r\n  for (let i = 0; i < subjects.length; i++) {\r\n    subjects[i] = replaceBadWords(subjects[i]);\r\n    subjects[i] = namePrettier(subjects[i]);\r\n  }\r\n  return subjects.join(' ');\r\n};\r\n\r\n/*-----2. Середня оцінка-----*/\r\nexport const getAverageMark = (student) => {\r\n  const { subjects } = student;\r\n  const temp = [];\r\n  for (let sub in subjects) {\r\n    temp.push(getAverage(...subjects[sub]));\r\n  }\r\n  return getAverage(...temp).toFixed(2);\r\n};\r\n\r\nconst getAverage = (...numbers) => {\r\n  let sum = 0;\r\n  numbers.map((el) => {\r\n    sum += el;\r\n  });\r\n  return sum / numbers.length;\r\n};\r\n\r\n/*-----3. Повернення загальної інформації про студента-----*/\r\nexport const getStudentInfo = (student) => {\r\n  const temp = {\r\n    course: student.course,\r\n    name: student.name,\r\n    averageMark: getAverageMark(student),\r\n  };\r\n  return temp;\r\n};\r\n\r\n/*-----4. Iмена студентів у алфавітному порядку-----*/\r\nexport const getStudentsNames = (students, sorted) => {\r\n  console.log(sorted ? students.map((el) => el.name).sort() : students.map((el) => el.name));\r\n  return sorted ? students.map((el) => el.name).sort() : students.map((el) => el.name);\r\n};\r\n\r\n/*-----5. Повернути iмя найкращого студента-----*/\r\nexport const getBestStudent = (students) => {\r\n  const newArr = JSON.parse(JSON.stringify(students));\r\n  newArr.map((stud) => {\r\n    stud.average = getAverageMark(stud);\r\n  });\r\n  let max = newArr.reduce((prev, curr) => {\r\n    if (prev.average > curr.average) {\r\n      return prev;\r\n    }\r\n    return curr;\r\n  });\r\n  console.log('best student', max.name);\r\n  return max.name;\r\n};\r\n\r\n/*-----6. Порахувати букви-----*/\r\nexport const calculateWordLetters = (word) => {\r\n  const temp = {};\r\n  [...word].forEach((el) => {\r\n    temp[el] ? (temp[el] += 1) : (temp[el] = 1);\r\n  });\r\n  return temp;\r\n};\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Card } from './Card';\r\nimport store from '../../Store/store';\r\nimport {\r\n  getSubjects,\r\n  getAverageMark,\r\n  getStudentInfo,\r\n  getStudentsNames,\r\n  getBestStudent,\r\n  calculateWordLetters,\r\n} from './functions';\r\n\r\nexport const HomeWork6 = () => {\r\n  let state = store.hw6;\r\n  let [sorted, setSorted] = useState(false);\r\n  const clickHandler = () => {\r\n    setSorted(!sorted);\r\n  };\r\n  const wordForCalcs = 'aaabcccc';\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <Card\r\n        title=\"Students\"\r\n        text={getStudentsNames(state.students, sorted)}\r\n        clickHandler={clickHandler}\r\n        bestStudent={getBestStudent(state.students)}\r\n      />\r\n      {state.students.map((el) => {\r\n        return (\r\n          <Card\r\n            title={el.name}\r\n            text={[\r\n              `subjects:  ${getSubjects(el)}`,\r\n              `average:  ${getAverageMark(el)}`,\r\n              ...Object.entries(getStudentInfo(el)),\r\n            ]}\r\n            hide={true}\r\n          />\r\n        );\r\n      })}\r\n      <Card\r\n        title=\"Counter\"\r\n        text={[wordForCalcs, ...Object.entries(calculateWordLetters(wordForCalcs))]}\r\n        hide={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Card = (props) => {\r\n  const textId = 'card' + props.id;\r\n  const btnId = 'btn' + props.id;\r\n  return (\r\n    <div class=\"col s4\">\r\n      <div class=\"card\">\r\n        <div class=\"card-content\">\r\n          <span class=\"card-title\">{props.title}</span>\r\n          <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/*---1---*/\r\nexport function getMyTaxes(salary) {\r\n  return (salary * this.tax).toFixed(2);\r\n}\r\n\r\n/*---2---*/\r\nexport function getMiddleTaxes() {\r\n  return (this.middleSalary * this.tax).toFixed(2);\r\n}\r\n\r\n/*---3---*/\r\nexport function getTotalTaxes() {\r\n  return this.middleSalary * this.tax * this.vacancies;\r\n}\r\n\r\n/*---4---*/\r\nexport function getMySalary(salary) {\r\n  let answ = { salary };\r\n  answ.taxes = getMyTaxes.call(this, salary);\r\n  answ.profit = salary - answ.taxes;\r\n  return answ;\r\n}\r\n","import React from 'react';\r\n\r\nimport { Card } from './Card';\r\nimport { getRandomNumber, namePrettier } from '../hw3/functions';\r\nimport { getMyTaxes, getMiddleTaxes, getTotalTaxes, getMySalary } from './functions';\r\n\r\nimport store from '../../Store/store';\r\n\r\nexport const HomeWork7 = () => {\r\n  const state = store.hw7;\r\n  const countries = Object.keys(state);\r\n  const mySalary = getRandomNumber(1500, 2000);\r\n\r\n  setInterval(() => {\r\n    console.log('4th function is here', getMySalary.call(state[countries[0]], mySalary));\r\n  }, 10000);\r\n\r\n  const myTaxesAcrosCountries = countries.map((country) => (\r\n    <Card\r\n      title={`My axes in ${namePrettier(country)}`}\r\n      text={`$ ${getMyTaxes.call(\r\n        state[country],\r\n        mySalary,\r\n      )} you would pay for taxes in ${namePrettier(country)} if you had ${mySalary}-dollar salary.`}\r\n    />\r\n  ));\r\n\r\n  const middleTaxesByCountries = countries.map((country) => (\r\n    <Card\r\n      title={`Average taxes in ${namePrettier(country)}`}\r\n      text={`$ ${getMiddleTaxes.call(\r\n        state[country],\r\n      )} taxes are paid by IT specialist in each ${namePrettier(country)} on average.`}\r\n    />\r\n  ));\r\n\r\n  const totalTaxesInCountries = countries.map((country) => (\r\n    <Card\r\n      title={`Total taxes in ${namePrettier(country)}`}\r\n      text={`$ ${getTotalTaxes.call(\r\n        state[country],\r\n      )} taxes are paid by IT specialists in ${namePrettier(country)}.`}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div>{myTaxesAcrosCountries}</div>\r\n      <div>{middleTaxesByCountries}</div>\r\n      <div>{totalTaxesInCountries}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// // Створіть функцію getMySalary(country) – яка буде писати\r\n// в консоль об'єкт виду: { salary: number, taxes: number, profit: number } кожні 10 секунд.\r\n// Значення salary – генеруйте випадковим чином у діапазоні 1500-2000.\r\n// taxes – розраховується в залежності від вибраної країни та значення salary.\r\n// profit = salary - taxes;\r\n","import React from 'react';\r\nimport { BrowserRouter, HashRouter, Route, Redirect } from 'react-router-dom';\r\nimport { Navbar } from './components/Navbar';\r\nimport { TBA } from './homeworks/TBA';\r\nimport { HomeWork1 } from './homeworks/hw1/HomeWork1';\r\nimport { HomeWork2 } from './homeworks/hw2/HomeWork2';\r\nimport { HomeWork3 } from './homeworks/hw3/HomeWork3';\r\nimport { HomeWork4 } from './homeworks/hw4/HomeWork4';\r\nimport { HomeWork6 } from './homeworks/hw6/HomeWork6';\r\nimport { HomeWork7 } from './homeworks/hw7/HomeWork7';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <Navbar />\r\n      <div className=\"main\">\r\n        <Route path=\"/hw1\" render={() => <HomeWork1 />} />\r\n        <Route path=\"/hw2\" render={() => <HomeWork1 />} />\r\n        <Route path=\"/hw3\" render={() => <HomeWork3 />} />\r\n        <Route path=\"/hw4\" render={() => <HomeWork4 />} />\r\n        <Route path=\"/hw5\" render={() => <HomeWork1 />} />\r\n        <Route path=\"/hw6\" render={() => <HomeWork6 />} />\r\n        <Route path=\"/hw7\" render={() => <HomeWork7 />} />\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/me\" render={() => <TBA />} />\r\n        </Route>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'materialize-css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}